# Generated by Django 2.0.1 on 2018-01-11 22:28

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Name')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='UUID')),
                ('ipaddress', models.GenericIPAddressField(verbose_name='IP Address')),
                ('authentication', models.BooleanField(default=False, verbose_name='Authentication')),
                ('authString', models.CharField(db_index=True, max_length=64, verbose_name='Authentication String')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Name')),
                ('desc', models.TextField(blank=True, verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readingInt', models.IntegerField(verbose_name='Integer Reading')),
                ('readingFloat', models.FloatField(verbose_name='Floating Point Reading')),
                ('sensor_timestamp', models.DateField(blank=True, null=True, verbose_name='Sensor Timestamp')),
                ('db_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='DB Timestamp')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Name')),
                ('desc', models.TextField(blank=True, verbose_name='Notes')),
                ('displayType', models.IntegerField(choices=[(1, 'Floating Point Number'), (0, 'Integer Number'), (2, 'Binary, Yes/No')], default=1, verbose_name='Readings Format')),
                ('displayUnits', models.CharField(choices=[('mA', 'Current: milliAmps'), ('mWh', 'Energy: milliWatt Hours'), ('kW', 'Power: KiloWatts'), ('A', 'Current: Amps'), ('BYN', 'Binary: Yes/No'), ('MW', 'Power: MegaWatts'), ('F', 'Temp: Farenhiet'), ('BAI', 'Binary: Active/Inactive'), ('K', 'Temp: Kelvin'), ('V', 'Voltage: Volts'), ('W', 'Power: Watts'), ('mW', 'Power: milliWatts'), ('C', 'Temp: Celsius'), ('MWh', 'Power: MegaWatt Hours'), ('BOO', 'Binary: On/Off'), ('mV', 'Voltage: milliVolts'), ('kWh', 'Power: KiloWatt Hours'), ('%', 'Math: Percentage'), ('Wh', 'Power: Watt Hours'), ('BPN', 'Binary: Present/Missing'), ('NUM', 'Generic: Number')], default='NUM', max_length=3, verbose_name='Readings Units')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='readings.Device')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='readings.Location')),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Name')),
                ('desc', models.TextField(blank=True, verbose_name='Notes')),
                ('displayType', models.IntegerField(choices=[(1, 'Floating Point Number'), (0, 'Integer Number'), (2, 'Binary, Yes/No')], default=1, verbose_name='Diplay Format')),
                ('displayUnits', models.CharField(choices=[('mA', 'Current: milliAmps'), ('mWh', 'Energy: milliWatt Hours'), ('kW', 'Power: KiloWatts'), ('A', 'Current: Amps'), ('BYN', 'Binary: Yes/No'), ('MW', 'Power: MegaWatts'), ('F', 'Temp: Farenhiet'), ('BAI', 'Binary: Active/Inactive'), ('K', 'Temp: Kelvin'), ('V', 'Voltage: Volts'), ('W', 'Power: Watts'), ('mW', 'Power: milliWatts'), ('C', 'Temp: Celsius'), ('MWh', 'Power: MegaWatt Hours'), ('BOO', 'Binary: On/Off'), ('mV', 'Voltage: milliVolts'), ('kWh', 'Power: KiloWatt Hours'), ('%', 'Math: Percentage'), ('Wh', 'Power: Watt Hours'), ('BPN', 'Binary: Present/Missing'), ('NUM', 'Generic: Number')], default='NUM', max_length=3, verbose_name='Display Units')),
            ],
        ),
        migrations.AddField(
            model_name='sensor',
            name='sensortype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='readings.SensorType'),
        ),
        migrations.AddField(
            model_name='reading',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readings.Sensor'),
        ),
        migrations.AddField(
            model_name='device',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='readings.Location'),
        ),
    ]
